spring:
  application:
    name: order-service
#  h2:
#    console:
#      enabled: true
#  datasource:
#    url: jdbc:h2:mem:test
#    username: sa
#    password: ''
#  jpa:
#    show-sql: true
#    hibernate:
#      ddl-auto: create
  datasource:
    url: jdbc:postgresql://localhost:5432/order
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

management:
  endpoints:
    web:
      exposure:
        include:
          - "*"
          - prometheus
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  tracing:
    sampling:
      probability: 1.0

server:
  port: 8083

rabbitmq:
  exchange:
    name: order.exchange
  queue:
    name: order.queue
  routing:
    key: order.tracking

app:
  message: "Hello vinopapa"


eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  register-with-eureka: true
  fetch-registry: true

logging:
  file:
    name: logs/${spring.application.name}.log
  logback:
    rollingpolicy:
      max-file-size: 5MB
      max-history: 7

# Circuit Breaker
resilience4j:
  circuitbreaker:
    instances:
      productService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: count_based
  retry:
    instances:
      retryBreaker:
        maxAttempts: 5
        waitDuration: 500ms
  ratelimiter:
    instances:
      rateBreaker:
        timeout-duration: 0
        limit-refresh-period: 4s
        limit-for-period: 2